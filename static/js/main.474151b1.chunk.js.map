{"version":3,"sources":["Column.js","Row.js","App.js","serviceWorker.js","index.js"],"names":["symbolsMap","2","0","1","Column","props","handleNewMove","bind","e","this","active","document","querySelector","style","display","innerHTML","marking","onNewMove","parseInt","target","id","className","onClick","class","String","fromCharCode","React","Component","Row","cols","i","row","boardState","push","key","patterns","AIScore","App","state","Array","fill","turn","mode","handleReset","handleModeChange","processBoard","makeAIMove","won","forEach","pattern","firstMark","marks","filter","mark","index","includes","length","getElementById","parentNode","background","setState","emptys","scores","score","xCount","oCount","p","maxIndex","reduce","maxVal","currentVal","currentIndex","preventDefault","querySelectorAll","el","prevState","slice","concat","getAttribute","rows","href","role","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.474151b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nvar symbolsMap = {\r\n  2: [\"marking\", \"32\"],\r\n  0: [\"marking marking-x\", 9587],\r\n  1: [\"marking marking-o\", 9711]\r\n};\r\n\r\nclass Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNewMove = this.handleNewMove.bind(this);\r\n  }\r\n  \r\n  handleNewMove(e) {\r\n    if (!this.props.active) {\r\n      document.querySelector(\"#message1\").style.display = \"none\";\r\n      document.querySelector(\"#message2\").innerHTML =\r\n        \"Game is already over! Reset if you want to play again.\";\r\n      document.querySelector(\"#message2\").style.display = \"block\";\r\n      return false;\r\n    } else if (this.props.marking == 2)\r\n      this.props.onNewMove(parseInt(e.target.id));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col\" onClick={this.handleNewMove}>\r\n        <div class={symbolsMap[this.props.marking][0]} id={this.props.id}>\r\n          {String.fromCharCode(symbolsMap[this.props.marking][1])}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Column;","import React, { Component } from \"react\";\r\nimport Column from \"./Column\";\r\n\r\nclass Row extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const cols = [];\r\n    for (var i = 0; i < 3; i++) {\r\n      var id = this.props.row * 3 + i;\r\n      var marking = this.props.boardState[id];\r\n      cols.push(\r\n        <Column\r\n          key={id + \"-\" + marking}\r\n          id={id + \"-\" + marking}\r\n          marking={marking}\r\n          onNewMove={this.props.onNewMove}\r\n          active={this.props.active}\r\n        />\r\n      );\r\n    }\r\n    return <div className=\"row\">{cols}</div>;\r\n  }\r\n}\r\n\r\nexport default Row;","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Row from \"./Row\";\nimport \"./App.css\";\n\nvar symbolsMap = {\n  2: [\"marking\", \"32\"],\n  0: [\"marking marking-x\", 9587],\n  1: [\"marking marking-o\", 9711] \n};\n\nvar patterns = [\n  //horizontal\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  //vertical\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  //diagonal\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nvar AIScore = { 2: 1, 0: 2, 1: 0 };\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardState: new Array(9).fill(2),\n      turn: 0,\n      active: true,\n      mode: \"AI\"\n    };\n    this.handleNewMove = this.handleNewMove.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleModeChange = this.handleModeChange.bind(this);\n    this.processBoard = this.processBoard.bind(this);\n    this.makeAIMove = this.makeAIMove.bind(this);\n  }\n\n  processBoard() {\n    var won = false;\n    patterns.forEach(pattern => {\n      var firstMark = this.state.boardState[pattern[0]];\n\n      if (firstMark != 2) {\n        var marks = this.state.boardState.filter((mark, index) => {\n          return pattern.includes(index) && mark == firstMark; //looks for marks matching the first in pattern's index\n        });\n\n        if (marks.length == 3) {\n          document.querySelector(\"#message1\").innerHTML =\n            String.fromCharCode(symbolsMap[marks[0]][1]) + \" wins!\";\n          document.querySelector(\"#message1\").style.display = \"block\";\n          pattern.forEach(index => {\n            var id = index + \"-\" + firstMark;\n            document.getElementById(id).parentNode.style.background = \"#d4edda\";\n          });\n          this.setState({ active: false });\n          won = true;\n        }\n      }\n    });\n\n    if (!this.state.boardState.includes(2) && !won) {\n      document.querySelector(\"#message2\").innerHTML = \"Game Over - It's a draw\";\n      document.querySelector(\"#message2\").style.display = \"block\";\n      this.setState({ active: false });\n    } else if (this.state.mode == \"AI\" && this.state.turn == 1 && !won) {\n      this.makeAIMove();\n    }\n  }\n\n  makeAIMove() {\n    var emptys = [];\n    var scores = [];\n    this.state.boardState.forEach((mark, index) => {\n      if (mark == 2) emptys.push(index);\n    });\n\n    emptys.forEach(index => {\n      var score = 0;\n      patterns.forEach(pattern => {\n        if (pattern.includes(index)) {\n          var xCount = 0;\n          var oCount = 0;\n          pattern.forEach(p => {\n            if (this.state.boardState[p] == 0) xCount += 1;\n            else if (this.state.boardState[p] == 1) oCount += 1;\n            score += p == index ? 0 : AIScore[this.state.boardState[p]];\n          });\n          if (xCount >= 2) score += 10;\n          if (oCount >= 2) score += 20;\n        }\n      });\n      scores.push(score);\n    });\n\n    var maxIndex = 0;\n    scores.reduce(function(maxVal, currentVal, currentIndex) {\n      if (currentVal >= maxVal) {\n        maxIndex = currentIndex;\n        return currentVal;\n      }\n      return maxVal;\n    });\n    this.handleNewMove(emptys[maxIndex]);\n  }\n\n  handleReset(e) {\n    if (e) e.preventDefault();\n    document\n      .querySelectorAll(\".alert\")\n      .forEach(el => (el.style.display = \"none\"));\n    this.setState({\n      boardState: new Array(9).fill(2),\n      turn: 0,\n      active: true\n    });\n  }\n  handleNewMove(id) {\n    this.setState(\n      prevState => {\n        return {\n          boardState: prevState.boardState\n            .slice(0, id)\n            .concat(prevState.turn)\n            .concat(prevState.boardState.slice(id + 1)),\n          turn: (prevState.turn + 1) % 2\n        };\n      },\n      () => {\n        this.processBoard();\n      }\n    );\n  }\n\n  handleModeChange(e) {\n    e.preventDefault();\n    if (e.target.getAttribute(\"href\").includes(\"AI\")) {\n      e.target.style.background = \"#d4edda\";\n      document.querySelector(\"#twop\").style.background = \"none\";\n      this.setState({ mode: \"AI\" });\n      this.handleReset(null);\n    } else if (e.target.getAttribute(\"href\").includes(\"2P\")) {\n      e.target.style.background = \"#d4edda\";\n      document.querySelector(\"#ai\").style.background = \"none\";\n      this.setState({ mode: \"2P\" });\n      this.handleReset(null);\n    }\n  }\n\n  render() {\n    const rows = [];\n    for (var i = 0; i < 3; i++)\n      rows.push(\n        <Row\n          row={i}\n          boardState={this.state.boardState}\n          onNewMove={this.handleNewMove}\n          active={this.state.active}\n        />\n      );\n    return (\n      <div>\n        <div class=\"container jumbotron\" id=\"container\">\n          <h3>TIC TAC TOE</h3>\n          <p>\n            <a href=\"./?AI\" onClick={this.handleModeChange} id=\"ai\">\n              Versus AI\n            </a>{\" \"}\n            ||\n            <a href=\"./?2P\" onClick={this.handleModeChange} id=\"twop\">\n              {\" \"}\n              2 Players\n            </a>{\" \"}\n            ||\n            <a href=\"#\" onClick={this.handleReset}>\n              {\" \"}\n              Reset board\n            </a>\n          </p>\n          <p>{String.fromCharCode(symbolsMap[this.state.turn][1])}'s turn</p>\n          <div className=\"board\">{rows}</div>\n          <p class=\"alert alert-success\" role=\"alert\" id=\"message1\"></p>\n          <p class=\"alert alert-info\" role=\"alert\" id=\"message2\"></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}